diff -urN wmconfig-0.9.9.orig/TODO wmconfig-0.9.9/TODO
--- wmconfig-0.9.9.orig/TODO	Mon Mar  9 21:55:19 1998
+++ wmconfig-0.9.9/TODO	Sun Aug 27 15:53:18 2000
@@ -1,13 +1,3 @@
 
-1. Or, perhaps a more general option would be useful, that provides "pre"
-   and "post" filenames that wmconfig will print before and after its normal
-   output.  Then people could do lots of interesting stuff (like I have a
-   "logout" menu and a "halt system" menu I'd like to appear below the
-   "normal" menu).
-
-2. wmconfig should have an option to delete the menus it uses before
-   creating them.  I've got a "rescan" menu option (used with fvwm2's
-   PipeRead function) and right now each time I run it, wmconfig simply adds
-   duplicate entries to the menus.
-   You need to add a "DestroyMenu <name>" before the first "AddToMenu".
-
+I have run out of ideas.
+--gafton
diff -urN wmconfig-0.9.9.orig/wmconfig.c wmconfig-0.9.9/wmconfig.c
--- wmconfig-0.9.9.orig/wmconfig.c	Sun Aug 27 15:53:03 2000
+++ wmconfig-0.9.9/wmconfig.c	Sun Aug 27 15:54:45 2000
@@ -73,6 +73,9 @@
 static const char *sys_confdir = NULL;
 static const char *user_confdir = NULL;
 
+static const char *pre_include = NULL;
+static const char *post_include = NULL;
+
 /* variables to be shared with other modules */
 const char 	*root_menu_name = NULL; /* name of the root menu */
 const char  *output_directory = NULL; /* dirctory where put menu */
@@ -104,6 +107,8 @@
     printf("  --no-promote\n");
     printf("  --no-sysdir\n");
     printf("  --no-userdir\n");
+    printf("  --pre\t\tfile_to_print_before_normal_output\n");
+    printf("  --post\tfile_to_print_after_normal_output\n");
     printf("  --help\n");
     printf("  --version\n");
     exit(-1);
@@ -134,6 +139,8 @@
 	{ "flags",	required_argument, 	0, 'f' },
 	{ "help",	no_argument,		0, 'h' },
 	{ "version",	no_argument,		0, 'v' },
+	{ "pre", 	required_argument,	0, 'p' },
+	{ "post", 	required_argument,	0, 't' },
 	{ "no-promote",	no_argument,		&val, 	FLAG_NO_PROMOTE },
 	{ "directories", no_argument,		&val, 	FLAG_DIRECTORIES },
 	{ "newstyle-directories", no_argument,		&val, 	FLAG_NEWSTYLE_DIRECTORIES },
@@ -146,7 +153,7 @@
 	{0, 0, 0, 0 },
     };
 
-    while ((c = getopt_long(argc, argv, "o:s:u:hr:f:d:", options,
+    while ((c = getopt_long(argc, argv, "o:s:u:hr:f:d:p:t:", options,
 			    &option_index)) != EOF) {
 	switch (c) {
 	    case 0:
@@ -212,6 +219,16 @@
 		    usage();
 		output_directory = optarg;
 		break;
+	    case 'p':
+		if (optarg == NULL)
+		    usage();
+		pre_include = optarg;
+		break;
+	    case 't':
+		if (optarg == NULL)
+		    usage();
+		post_include = optarg;
+		break;
 	    case 'v':
 		version();
 		break;	       
@@ -293,6 +310,27 @@
     return home;
 }
 
+/* dummy and simple way to dump a file out */
+static void print_file(const char *file)
+{
+    FILE *f;
+    char buffer[4096];
+    
+    if (file == NULL)
+	return;
+    
+    f = fopen(file, "r");
+    if (f == NULL) {
+	fprintf(stderr, "Could not open file `%s' for reading\n", file);
+	return;
+    }
+
+    while (fgets(buffer, sizeof(buffer), f))
+	   printf("%s", buffer);
+
+    fclose(f);
+}
+   
 int main (int argc, char **argv)
 {
     int ret;
@@ -379,6 +417,8 @@
 	exit(-3);
     }
 
+    print_file(pre_include);
+    
     switch (output_type) {
 	case DO_FVWM95:
 	    output_fvwm95(root_group);
@@ -411,6 +451,8 @@
 	default:    
 	    output_debug(root_group);
     }
+
+    print_file(post_include);
     return 0;
 }
 
