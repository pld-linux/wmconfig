diff -ur wmconfig-0.9.8/afterstep.c wmconfig-0.9.8.pre-post/afterstep.c
--- wmconfig-0.9.8/afterstep.c	Thu Feb  3 17:27:12 2000
+++ wmconfig-0.9.8.pre-post/afterstep.c	Thu Jun 22 19:49:37 2000
@@ -36,7 +36,7 @@
 /*
  * Outputs on stdout the AFTERSTEP-compatible configuration
  */
-void output_afterstep(struct group *root)
+void output_afterstep(struct group *root, const char *pre_include, const char *post_include)
 {
     struct item *item;
     int 	debug_icon = 0;
@@ -50,7 +50,7 @@
     item = root->items;
     while (item->type != 0) {
 	if (item->type == ITEM_MENU)
-	    output_afterstep(item->data);
+	    output_afterstep(item->data, NULL, NULL);
 	item++;
     }
 
@@ -77,7 +77,17 @@
     /* third pass - the menu */
     item = root->items;
     printf("Popup\t\"%s\"\n\tTitle\t\"%s\"\n",
-	   root->name, root->name);    
+	   root->name, root->name);
+    /* print pre-include file */
+    if (pre_include != NULL) {
+	    FILE *f;
+	    char buf[80];
+
+	    f = fopen(pre_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
     while (item->type != 0) {
 	if (item->type == ITEM_MENU) {
 	    struct group *tmp;
@@ -97,6 +107,16 @@
 	    }
 	}
 	item++;
+    }
+    /* print post-include file */
+    if (post_include != NULL) {
+	    FILE *f;
+	    char buf[80];
+
+	    f = fopen(post_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
     }
     printf("EndPopup\n\n");
     
diff -ur wmconfig-0.9.8/afterstep_dir.c wmconfig-0.9.8.pre-post/afterstep_dir.c
--- wmconfig-0.9.8/afterstep_dir.c	Thu Feb  3 17:29:18 2000
+++ wmconfig-0.9.8.pre-post/afterstep_dir.c	Thu Jun 22 19:15:52 2000
@@ -170,7 +170,7 @@
 }
 
 
-void output_afterstep_dir(struct group *root)
+void output_afterstep_dir(struct group *root, const char *pre_include, const char *post_include)
 {
     struct stat st;
     char root_dir[PATH_MAX];
diff -ur wmconfig-0.9.8/blackbox.c wmconfig-0.9.8.pre-post/blackbox.c
--- wmconfig-0.9.8/blackbox.c	Thu Feb  3 17:26:10 2000
+++ wmconfig-0.9.8.pre-post/blackbox.c	Thu Jun 22 19:52:24 2000
@@ -36,16 +36,16 @@
 /*
  * Outputs on stdout a blackbox-compatible configuration
  */
-static void output_blackbox_level(struct group *root, int level);
+static void output_blackbox_level(struct group *root, int level, const char *pre_include, const char *post_include);
 
 /* Return valid menu item  */
 char* valid_string (char *str);
 
-void output_blackbox(struct group *root) {
-    return output_blackbox_level(root, 0);
+void output_blackbox(struct group *root, const char *pre_include, const char *post_include) {
+    return output_blackbox_level(root, 0, pre_include, post_include);
 }
 
-void output_blackbox_level(struct group *root, int level)
+void output_blackbox_level(struct group *root, int level, const char *pre_include, const char *post_include)
 {
     struct item *item;
     int sp;
@@ -56,16 +56,26 @@
     if (level > 0) 
         for (sp = 0; sp < level; sp++) putchar('\t');
     
-    if (level == 0)
+    if (level == 0) {
 	printf("[begin] (%s)\n", valid_string(root->name));
-    else
+	/* print pre-include file */
+	if (pre_include != NULL) {
+	    FILE *f;
+	    char buf[80];
+
+	    f = fopen(pre_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+	}
+    } else
 	printf("[submenu] (%s)\n", valid_string(root->name));
 
     item = root->items;
     while (item->type != 0) {
         if (item->type == ITEM_MENU) {
 	    struct group *subgroup = (struct group *)item->data;
-            output_blackbox_level(subgroup, level + 1);
+            output_blackbox_level(subgroup, level + 1, NULL, NULL);
 	} else if (item->type == ITEM_APP) {
             struct package *app;
 
@@ -95,7 +105,20 @@
     }
     if (level > 0) 
         for (sp = 0; sp < level; sp++) putchar('\t');
-    
+   
+    if (level == 0) {
+	/* print post-include file */
+	if (post_include != NULL) {
+	    FILE *f;
+	    char buf[80];
+
+	    f = fopen(post_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+	}
+    }
+
     printf("[end]\n");
 }
 
diff -ur wmconfig-0.9.8/debug.c wmconfig-0.9.8.pre-post/debug.c
--- wmconfig-0.9.8/debug.c	Thu Feb  3 17:29:18 2000
+++ wmconfig-0.9.8.pre-post/debug.c	Thu Jun 22 19:51:15 2000
@@ -65,7 +65,7 @@
     print_line("|  copy     ", copy);
 }
 
-static void debug(struct group *root, int level)
+static void debug(struct group *root, int level, const char *pre_include, const char *post_include)
 {
     int i;
     struct item *item;
@@ -81,7 +81,7 @@
     item = root->items;
     while (item->type != 0) {
 	if (item->type == ITEM_MENU) {
-	    debug(item->data, level+1);
+	    debug(item->data, level+1, NULL, NULL);
 	} else if (item->type == ITEM_APP) {
 	    struct package *app;
 
@@ -92,7 +92,7 @@
     }
 }
 
-void output_debug(struct group *root)
+void output_debug(struct group *root, const char *pre_include, const char *post_include)
 {
-    debug(root, 0);
+    debug(root, 0, pre_include, post_include);
 }
diff -ur wmconfig-0.9.8/fvwm2.c wmconfig-0.9.8.pre-post/fvwm2.c
--- wmconfig-0.9.8/fvwm2.c	Wed Feb 10 23:16:23 1999
+++ wmconfig-0.9.8.pre-post/fvwm2.c	Thu Jun 22 19:34:09 2000
@@ -124,9 +124,26 @@
     free(root_name);
 }
 
-void output_fvwm2(struct group *root)
+void output_fvwm2(struct group *root, const char *pre_include, const char *post_include)
 {
+    FILE *f;
+    char buf[80];
+
+    /* print pre-include file */
+    if (pre_include != NULL) {
+	    f = fopen(pre_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
     fvwm2(root, 0, "");
+    /* print post-include file */
+    if (post_include != NULL) {
+	    f = fopen(post_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
 }
 
      
diff -ur wmconfig-0.9.8/fvwm95.c wmconfig-0.9.8.pre-post/fvwm95.c
--- wmconfig-0.9.8/fvwm95.c	Wed Feb 10 23:16:23 1999
+++ wmconfig-0.9.8.pre-post/fvwm95.c	Thu Jun 22 19:35:25 2000
@@ -126,7 +126,24 @@
     free(root_name);
 }
 
-void output_fvwm95(struct group *root)
+void output_fvwm95(struct group *root, const char *pre_include, const char *post_include)
 {
+    FILE *f;
+    char buf[80];
+
+    /* print pre-include file */
+    if (pre_include != NULL) {
+	    f = fopen(pre_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
     fvwm95(root, 0, "");
+    /* print post-include file */
+    if (post_include != NULL) {
+	    f = fopen(post_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
 }
diff -ur wmconfig-0.9.8/icewm.c wmconfig-0.9.8.pre-post/icewm.c
--- wmconfig-0.9.8/icewm.c	Thu Feb 11 00:57:12 1999
+++ wmconfig-0.9.8.pre-post/icewm.c	Thu Jun 22 19:51:44 2000
@@ -36,8 +36,26 @@
  */
 static void output_icewm_level(struct group *root, int level);
 
-void output_icewm(struct group *root) {
-    return output_icewm_level(root, 0);
+void output_icewm(struct group *root, const char *pre_include, const char *post_include)
+{
+    FILE *f;
+    char buf[80];
+
+    /* print pre-include file */
+    if (pre_include != NULL) {
+	f = fopen(pre_include, "r");
+	while (fgets(buf, 80, f) != NULL)
+		printf("%s", buf);
+	fclose(f);
+    }
+    output_icewm_level(root, 0);
+    /* print post-include file */
+    if (post_include != NULL) {
+	f = fopen(post_include, "r");
+	while (fgets(buf, 80, f) != NULL)
+		printf("%s", buf);
+	fclose(f);
+    }
 }
 
 void output_icewm_level(struct group *root, int level)
diff -ur wmconfig-0.9.8/kde.c wmconfig-0.9.8.pre-post/kde.c
--- wmconfig-0.9.8/kde.c	Thu Jun 22 19:54:59 2000
+++ wmconfig-0.9.8.pre-post/kde.c	Thu Jun 22 19:19:22 2000
@@ -214,7 +214,7 @@
 /*
  * Main function
  */
-void output_kde(struct group *root)
+void output_kde(struct group *root, const char *pre_include, const char *post_include)
 {
     struct stat st;
     char root_dir[PATH_MAX];
diff -ur wmconfig-0.9.8/mwm.c wmconfig-0.9.8.pre-post/mwm.c
--- wmconfig-0.9.8/mwm.c	Mon Mar  9 20:33:11 1998
+++ wmconfig-0.9.8.pre-post/mwm.c	Thu Jun 22 19:50:30 2000
@@ -36,7 +36,7 @@
 /*
  * Outputs on stdout the AFTERSTEP-compatible configuration
  */
-void output_mwm(struct group *root)
+void output_mwm(struct group *root, const char *pre_include, const char *post_include)
 {
     struct item *item;
     
@@ -46,6 +46,17 @@
     printf("Menu %s\n{\n\t@%s\tf.title\n",
 	   root->name, root->name);
     
+    /* print pre-include file */
+    if (pre_include != NULL) {
+	    FILE *f;
+	    char buf[80];
+
+	    f = fopen(pre_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
+
     item = root->items;
     while (item->type != 0) {
 	if (item->type == ITEM_MENU) {
@@ -72,13 +83,23 @@
 	item++;
     }
     
+    /* print post-include file */
+    if (post_include != NULL) {
+	    FILE *f;
+	    char buf[80];
+
+	    f = fopen(post_include, "r");
+	    while (fgets(buf, 80, f) != NULL)
+		    printf("%s", buf);
+	    fclose(f);
+    }
     printf("}\n\n");
     
     /* second pass, recursive output... */
     item = root->items;
     while (item->type != 0) {
 	if (item->type == ITEM_MENU)
-	    output_mwm(item->data);
+	    output_mwm(item->data, NULL, NULL);
 	item++;
     }
 
diff -ur wmconfig-0.9.8/prototypes.h wmconfig-0.9.8.pre-post/prototypes.h
--- wmconfig-0.9.8/prototypes.h	Thu Aug 12 23:15:42 1999
+++ wmconfig-0.9.8.pre-post/prototypes.h	Thu Jun 22 19:47:27 2000
@@ -42,31 +42,31 @@
 int parse_line(char *buffer, char **package, char **tag, char **lang, char **string);
 
 /* fvwm95.c */
-void output_fvwm95(struct group *root);
+void output_fvwm95(struct group *root, const char *pre_include, const char *post_include);
 
 /* fvwm2.c */
-void output_fvwm2(struct group *root);
+void output_fvwm2(struct group *root, const char *pre_include, const char *post_include);
 
 /* afterstep.c */
-void output_afterstep(struct group *root);
+void output_afterstep(struct group *root, const char *pre_include, const char *post_include);
 
 /* mwm.c */
-void output_mwm(struct group *root);
+void output_mwm(struct group *root, const char *pre_include, const char *post_include);
 
 /* icewm.c */
-void output_icewm(struct group *root);
+void output_icewm(struct group *root, const char *pre_include, const char *post_include);
 
 /* blackbox.c */
-void output_blackbox(struct group *root);
+void output_blackbox(struct group *root, const char *pre_include, const char *post_include);
 
 /* wmaker.c */
-void output_wmaker(struct group *root);
+void output_wmaker(struct group *root, const char *pre_include, const char *post_include);
 
 /* afterstep_dir.c */
-void output_afterstep_dir(struct group *root);
+void output_afterstep_dir(struct group *root, const char *pre_include, const char *post_include);
 
 /* kde.c */
-void output_kde(struct group *root);
+void output_kde(struct group *root, const char *pre_include, const char *post_include);
 
 /* wmconfig.c */
 int main(int argc, char **argv);
@@ -79,7 +79,7 @@
 int build_root(void);
 
 /* debug.c */
-void output_debug(struct group *root);
+void output_debug(struct group *root, const char *pre_include, const char *post_include);
 
 /* util.c */
 char *single_string(const char *group_string);
diff -ur wmconfig-0.9.8/wmaker.c wmconfig-0.9.8.pre-post/wmaker.c
--- wmconfig-0.9.8/wmaker.c	Wed Sep  9 18:46:02 1998
+++ wmconfig-0.9.8.pre-post/wmaker.c	Thu Jun 22 19:48:40 2000
@@ -35,7 +35,7 @@
 #include "prototypes.h"
 #include "package.h"
 
-static void wmaker(struct group *root, int level)
+static void wmaker(struct group *root, int level, const char *pre_include, const char *post_include)
 {
     int i;
     struct item *item;
@@ -49,10 +49,20 @@
 	}
 	printf("\"%s\" MENU\n", root->name);
     }
+    /* print pre-include file */
+    if (pre_include != NULL) {
+	FILE *f;
+	char buf[80];
+
+	f = fopen(pre_include, "r");
+	while (fgets(buf, 80, f) != NULL)
+	    printf("%s", buf);
+	fclose(f);
+    }
     item = root->items;
     while (item->type != 0) {
 	if (item->type == ITEM_MENU) {
-	    wmaker(item->data, level+1);
+	    wmaker(item->data, level+1, NULL, NULL);
 	} else if (item->type == ITEM_APP) {
 	    struct package *app;
 
@@ -72,9 +82,19 @@
 	}
 	printf("\"%s\" END\n", root->name);
     }
+    /* print post-include file */
+    if (post_include != NULL) {
+	FILE *f;
+	char buf[80];
+
+	f = fopen(post_include, "r");
+	while (fgets(buf, 80, f) != NULL)
+	    printf("%s", buf);
+	fclose(f);
+    }
 }
 
-void output_wmaker(struct group *root)
+void output_wmaker(struct group *root, const char *pre_include, const char *post_include)
 {
-    wmaker(root, 0);
+    wmaker(root, 0, pre_include, post_include);
 }
diff -ur wmconfig-0.9.8/wmconfig.c wmconfig-0.9.8.pre-post/wmconfig.c
--- wmconfig-0.9.8/wmconfig.c	Thu Jun 22 19:54:59 2000
+++ wmconfig-0.9.8.pre-post/wmconfig.c	Thu Jun 22 19:53:18 2000
@@ -73,6 +73,9 @@
 static const char *sys_confdir = NULL;
 static const char *user_confdir = NULL;
 
+static const char *pre_include = NULL;
+static const char *post_include = NULL;
+
 /* variables to be shared with other modules */
 const char 	*root_menu_name = NULL; /* name of the root menu */
 const char  *output_directory = NULL; /* dirctory where put menu */
@@ -94,6 +97,8 @@
 	   DEFAULT_ROOT_NAME?DEFAULT_ROOT_NAME:"");
     printf("  --outputdir\toutput_directory\t(default: \"%s\")\n",
 	   DEFAULT_OUTPUTDIR?"$HOME/"DEFAULT_OUTPUTDIR:"");
+    printf("  --pre-include\t\tfile to print before normal output\n");
+    printf("  --post-include\tfile to print after normal output\n");
     printf("  --flag\tno-icons,no-mini-icons,promote,\n");
     printf("\t\tdirectories,newstyle-directories\t(no defaults)\n");
     printf("  --no-icons\n");
@@ -133,6 +138,8 @@
 	{ "flags",	required_argument, 	0, 'f' },
 	{ "help",	no_argument,		0, 'h' },
 	{ "version",	no_argument,		0, 'v' },
+	{ "pre-include", required_argument,	0, 'p' },
+	{ "post-include", required_argument,	0, 't' },
 	{ "no-promote",	no_argument,		&val, 	FLAG_NO_PROMOTE },
 	{ "directories", no_argument,		&val, 	FLAG_DIRECTORIES },
 	{ "newstyle-directories", no_argument,		&val, 	FLAG_NEWSTYLE_DIRECTORIES },
@@ -144,7 +151,7 @@
 	{0, 0, 0, 0 },
     };
 
-    while ((c = getopt_long(argc, argv, "o:s:u:hr:f:d:", options,
+    while ((c = getopt_long(argc, argv, "o:s:u:hr:f:d:p:t:", options,
 			    &option_index)) != EOF) {
 	switch (c) {
 	    case 0:
@@ -208,6 +215,16 @@
 		    usage();
 		output_directory = optarg;
 		break;
+	    case 'p':
+		if (optarg == NULL)
+		    usage();
+		pre_include = optarg;
+		break;
+	    case 't':
+		if (optarg == NULL)
+		    usage();
+		post_include = optarg;
+		break;
 	    case 'v':
 		version();
 		break;	       
@@ -377,35 +394,35 @@
 
     switch (output_type) {
 	case DO_FVWM95:
-	    output_fvwm95(root_group);
+	    output_fvwm95(root_group, pre_include, post_include);
 	    break;
 	case DO_FVWM2:
-	    output_fvwm2(root_group);
+	    output_fvwm2(root_group, pre_include, post_include);
 	    break;
 	case DO_AFTERSTEP:
 	    if (is_set(DIRECTORIES) || is_set(NEWSTYLE_DIRECTORIES))
-		output_afterstep_dir(root_group);
+		output_afterstep_dir(root_group, pre_include, post_include);
 	    else
-		output_afterstep(root_group);
+		output_afterstep(root_group, pre_include, post_include);
 	    break;
 	case DO_MWM:
-	    output_mwm(root_group);
+	    output_mwm(root_group, pre_include, post_include);
 	    break;
 	case DO_WMAKER:
-	    output_wmaker(root_group);
+	    output_wmaker(root_group, pre_include, post_include);
 	    break;
 	case DO_ICEWM:
-	    output_icewm(root_group);
+	    output_icewm(root_group, pre_include, post_include);
 	    break;
 	case DO_BLACKBOX:
-	    output_blackbox(root_group);
+	    output_blackbox(root_group, pre_include, post_include);
 	    break;
 	case DO_KDE:
-	    output_kde(root_group);
+	    output_kde(root_group, pre_include, post_include);
 	    break;
 	case DO_DEBUG:
 	default:    
-	    output_debug(root_group);
+	    output_debug(root_group, pre_include, post_include);
     }
     return 0;
 }
